service: ${env:AZURE_SLS_SERVICE_NAME} # Name of the App
functions: ${file(functions/azure.yml)}
# resources:
#   - ${file(resources/aws/api-gateway-errors.yml)}
#   - ${file(resources/aws/dynamodb-table.yml)}
#   - ${file(resources/aws/s3-bucket.yml)}

frameworkVersion: ">=1.21.0 <2.0.0" # Serverless Framework version constraints

provider:
  name: azure
  runtime: nodejs12
  prefix: ${env:AZURE_SLS_SERVICE_PREFIX}
  stage: ${env:AZURE_SLS_STAGE}
  region: ${env:AZURE_SLS_REGION}
  versionFunctions: false
  os: linux
  apim: true
  resourceGroup: DavidTest
  environment: # these will be created as application settings
    TABLE_NAME: ${env:TABLE_NAME},
    STRIPE_SECRET_KEY: ${env:STRIPE_SECRET_KEY},
    AZURE_COSMOS_DB_URI: mongodb://${env:AZURE_COSMOS_MONGO_DB_NAME}:${env:AZURE_COSMOS_MONGO_DB_KEY}@${env:AZURE_COSMOS_MONGO_DB_NAME}.mongo.cosmos.azure.com:${env:AZURE_COSMOS_MONGO_DB_PORT}/?ssl=true&appName=@${env:AZURE_COSMOS_MONGO_DB_NAME}@

plugins:
  - serverless-azure-functions
  - serverless-dotenv-plugin
  - serverless-webpack

package:
  excludeDevDependencies: true
  exclude:
    - local.settings.json
    - .vscode/**

custom:
  webpack:
    packager: npm
    excludeFiles: ./**/*.test.js # Provide a glob for files to ignore
    webpackConfig: build/webpack.config.js
    includeModules:
      forceExclude:
        - "aws-sdk"
